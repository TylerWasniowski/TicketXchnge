# Generated by Django 2.1.2 on 2018-10-30 23:44

from django.db import migrations, models
import etes.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('user_name', models.CharField(max_length=50)),
                ('f_name', models.CharField(blank=True, max_length=300)),
                ('l_name', models.CharField(blank=True, max_length=300)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', etes.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eid', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=100)),
                ('event_venue', models.CharField(max_length=500)),
                ('event_city', models.CharField(max_length=400)),
                ('event_date', models.DateTimeField()),
                ('tickets_avail', models.PositiveSmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_event', models.CharField(max_length=200)),
                ('ticket_price', models.FloatField(max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ticket_type', models.CharField(choices=[('GA', 'General Admission'), ('VIP', 'VIP Seating'), ('AS', 'Assigned Seating')], default='GA', max_length=3)),
            ],
        ),
    ]
